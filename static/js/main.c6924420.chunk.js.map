{"version":3,"sources":["components/DarkModeToggle.js","components/Header.js","components/InputHint.js","components/SelectLanguage.js","components/InputFields.js","components/PlayAudio.js","components/WordList.js","components/OneMeaning.js","components/OutputFields.js","components/NothingFound.js","components/LoadingScreen.js","components/Content.js","App.js","index.js"],"names":["DarkModeToggle","theme","clickedClass","body","document","lightTheme","darkTheme","localStorage","getItem","classList","add","className","id","onClick","e","replace","target","remove","setItem","switchTheme","Header","href","rel","InputHint","props","text","SelectLanguage","useState","selectedLang","onLangSelected","selectedLangLabel","onLangLabelSelected","useEffect","selected","querySelector","optionsContainer","optionsList","querySelectorAll","addEventListener","toggle","forEach","innerHTML","onLangChanged","onLangLabelChanged","showHint","options","map","option","i","type","value","htmlFor","label","InputFields","onSubmit","handleSubmit","showInputHint","langHint","wordHint","placeholder","onChange","onWordChanged","PlayAudio","url","Audio","play","WordList","title","list","word","l","OneMeaning","meaning","lastOne","partOfSpeech","definitions","j","definition","example","synonyms","length","antonyms","OutputFields","data","g","langLabel","phonetics","phonetic","h","audio","sourceUrl","meanings","wordMeaning","NothingFound","LoadingScreen","Content","output","lang","setLang","setLangLabel","setWord","notFoundWord","setNotFoundWord","setData","isResponseOK","setIsResponseOK","hasSearched","setHasSearched","clickedSearch","setClickedSearch","isLoading","setIsLoading","validLang","validWord","validInputs","setValidInputs","setShowInputHint","fetch","then","response","ok","json","catch","error","console","preventDefault","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c6924420.chunk.js","sourcesContent":["import \"./DarkModeToggle.css\";\r\n\r\nfunction DarkModeToggle() {\r\n  let clickedClass = \"clicked\";\r\n  const body = document.body;\r\n  const lightTheme = \"light\";\r\n  const darkTheme = \"dark\";\r\n  let theme;\r\n\r\n  // Use the localStorage object to store the value of the toggle in the browser\r\n  // and check if a dark or light value is already set\r\n  if (localStorage) {\r\n    theme = localStorage.getItem(\"theme\");\r\n  }\r\n  if (theme === lightTheme || theme === darkTheme) {\r\n    body.classList.add(theme);\r\n  } else {\r\n    // Set default theme to light\r\n    body.classList.add(lightTheme);\r\n  }\r\n\r\n  // Switch theme on button click   \r\n  const switchTheme = (e) => {\r\n    if (theme === darkTheme) {\r\n      body.classList.replace(darkTheme, lightTheme);\r\n      e.target.classList.remove(clickedClass);\r\n      localStorage.setItem(\"theme\", \"light\");\r\n      theme = lightTheme;\r\n    } else {\r\n      body.classList.replace(lightTheme, darkTheme);\r\n      e.target.classList.add(clickedClass);\r\n      localStorage.setItem(\"theme\", \"dark\");\r\n      theme = darkTheme;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={theme === \"dark\" ? clickedClass : \"\"}\r\n      id=\"darkModeToggle\"\r\n      onClick={(e) => switchTheme(e)}\r\n    ></button>\r\n  );\r\n};\r\n\r\nexport default DarkModeToggle;\r\n","import \"./Header.css\";\r\nimport DarkModeToggle from \"./DarkModeToggle\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <a href=\"https://github.com/timii/WordOcean\" target=\"_blank\" rel=\"noreferrer\">\r\n        <button className=\"header_github\"></button>\r\n      </a>\r\n      <div className=\"header_text\">Word Ocean</div>\r\n      <DarkModeToggle />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import \"./InputHint.css\";\r\n\r\nfunction InputHint(props) {\r\n    return (\r\n        <div className=\"input_hint\">\r\n            {props.text}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputHint;\r\n","import { useEffect, useState } from \"react\";\r\nimport InputHint from \"./InputHint\";\r\nimport \"./SelectLanguage.css\";\r\n\r\nfunction SelectLanguage(props) {\r\n  const [selectedLang, onLangSelected] = useState(\"\");\r\n  const [selectedLangLabel, onLangLabelSelected] = useState(\"Select Language\");\r\n\r\n  useEffect(() => {\r\n    const selected = document.querySelector(\".selected\");\r\n    const optionsContainer = document.querySelector(\".options-container\");\r\n    const optionsList = document.querySelectorAll(\".option\");\r\n\r\n    selected.addEventListener(\"click\", () => {\r\n      optionsContainer.classList.toggle(\"active\");\r\n    });\r\n\r\n    optionsList.forEach((e) => {\r\n      e.addEventListener(\"click\", () => {\r\n        selected.innerHTML = e.querySelector(\"label\").innerHTML;\r\n\r\n        // Return language value and label to parent Component\r\n        onLangSelected(e.querySelector(\"input\").id);\r\n        onLangLabelSelected(e.querySelector(\"label\").innerHTML);\r\n\r\n        optionsContainer.classList.remove(\"active\");\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  // useEffect that runs everytime an option is picked\r\n  useEffect(() => {\r\n    const selected = document.querySelector(\".selected\");\r\n\r\n    // Lighter text color if no language selected\r\n    if (selectedLangLabel === \"Select Language\") {\r\n      selected.classList.add(\"nothing-selected\");\r\n    }\r\n\r\n    // Darker text color if language selected\r\n    else {\r\n      selected.classList.remove(\"nothing-selected\");\r\n\r\n      // Sends language value and label to parent component\r\n      props.onLangChanged(selectedLang);\r\n      props.onLangLabelChanged(selectedLangLabel);\r\n    }\r\n  }, [props, selectedLang, selectedLangLabel]);\r\n\r\n  return (\r\n    <div>\r\n      <InputHint text={props.showHint ? \"Please select a language\" : \"\"}></InputHint>\r\n\r\n      <div className=\"container\" >\r\n        <div className=\"select-box\">\r\n          <div className=\"options-container\">\r\n            {props.options.map((option, i) => (\r\n              <div className=\"option\" key={i}>\r\n                <input type=\"radio\" className=\"radio\" id={option.value} />\r\n                <label htmlFor={option.value}>{option.label}</label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"selected\">\r\n            {selectedLangLabel}\r\n          </div>\r\n        </div>\r\n      </div >\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectLanguage;\r\n","import \"./InputFields.css\";\r\nimport InputHint from \"./InputHint\";\r\nimport SelectLanguage from \"./SelectLanguage\";\r\n\r\nfunction InputFields(props) {\r\n\r\n  const options = [\r\n    { value: \"en_US\", label: \"English\" },\r\n    { value: \"es\", label: \"Spanish\" },\r\n    { value: \"fr\", label: \"French\" },\r\n    { value: \"ja\", label: \"Japanese\" },\r\n    { value: \"ru\", label: \"Russian\" },\r\n    { value: \"en_GB\", label: \"English (UK)\" },\r\n    { value: \"de\", label: \"German\" },\r\n    { value: \"it\", label: \"Italian\" },\r\n    { value: \"ko\", label: \"Korean\" },\r\n    { value: \"pt-BR\", label: \"Brazilian Portuguese\" },\r\n    { value: \"ar\", label: \"Arabic\" },\r\n    { value: \"tr\", label: \"Turkish\" },\r\n    { value: \"hi\", label: \"Hindi\" },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"input_container\">\r\n      <form className=\"input\" onSubmit={props.handleSubmit}>\r\n        <SelectLanguage onLangChanged={props.onLangChanged} onLangLabelChanged={props.onLangLabelChanged} options={options} className=\"input_lang\" showHint={props.showInputHint.langHint} />\r\n        <div className=\"word_input_container\">\r\n          <InputHint text={props.showInputHint.wordHint ? \"Please enter a word\" : \"\"}></InputHint>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Word\"\r\n            className=\"input_word\"\r\n            onChange={(e) => props.onWordChanged(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <InputHint text=\"\"></InputHint>\r\n          <div className=\"search_container\">\r\n            <input type=\"submit\" value=\"Search\" className=\"input_search\" />\r\n            <div className=\"search_icon\"></div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputFields;\r\n","import './PlayAudio.css';\r\n\r\nfunction PlayAudio(props) {\r\n    const onAudioClicked = (url) => {\r\n        var audio = new Audio(url);\r\n        audio.play();\r\n    }\r\n\r\n    return (\r\n        <div onClick={() => onAudioClicked(props.url)} className=\"audioIcon\"></div>\r\n    );\r\n}\r\n\r\nexport default PlayAudio;","import \"./WordList.css\";\r\n\r\nfunction WordList(props) {\r\n    return (\r\n        <div className=\"word_list_container\">\r\n            <div>{props.title}</div>\r\n            <ul className=\"word_list_words\">\r\n                {props.list.map((word, l) => (\r\n                    <li className=\"word_list_item\" key={l}>{word}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WordList;","import WordList from \"./WordList\";\r\nimport \"./OneMeaning.css\";\r\n\r\nfunction OneMeaning(props) {\r\n  const meaning = props.meaning;\r\n\r\n  return (\r\n    <div className=\"meaning\">\r\n      <div className={`part_of_speech ${props.lastOne ? 'last_one' : ''}`}>\r\n        <span className=\"part_of_speech_text\">{meaning.partOfSpeech}</span>\r\n      </div>\r\n      <div className=\"definitions\">\r\n        {meaning.definitions.map((definitions, j) => (\r\n          <div key={j} className=\"definition\">\r\n            <div className=\"definition_text\">{definitions.definition}</div>\r\n            {definitions.example &&\r\n              <div className=\"definition_example\">\"{definitions.example}\"</div>\r\n            }\r\n\r\n            <div className=\"word_lists\">\r\n              {/* Show synonyms array if available */}\r\n              {definitions.synonyms.length > 0 ?\r\n                <WordList title=\"synonyms\" list={definitions.synonyms} />\r\n                : meaning.synonyms.length > 0 ? <WordList title=\"synonyms\" list={meaning.synonyms} /> : null\r\n              }\r\n\r\n              {/* Show antonyms array if available */}\r\n              {definitions.antonyms.length > 0 ?\r\n                <WordList title=\"antonyms\" list={definitions.antonyms} />\r\n                : meaning.antonyms.length > 0 ? <WordList title=\"antonyms\" list={meaning.antonyms} /> : null\r\n              }\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OneMeaning;\r\n","import \"./OutputFields.css\";\r\nimport PlayAudio from \"./PlayAudio\";\r\nimport OneMeaning from \"./OneMeaning\";\r\n\r\nfunction OutputFields(props) {\r\n  return (\r\n    <div className=\"output\">\r\n      {props.data.length > 0 && (\r\n        props.data.map((word, g) => (\r\n          <div className=\"output_element\" key={g}>\r\n            <div className=\"output_header\">\r\n              <div className=\"output_word\">{word.word}</div>\r\n              <div className=\"output_lang\"><span className=\"output_lang_text\">{props.langLabel}</span></div>\r\n              <div className=\"output_phonetics\">\r\n                {word.phonetics.map((phonetic, h) => {\r\n                  return phonetic.text ? (\r\n                    <div className=\"output_phonetics-pair\" key={h}>\r\n                      [{phonetic.text}]\r\n                      {(phonetic.audio.length > 0 && phonetic.sourceUrl) && <PlayAudio url={phonetic.audio} />}\r\n                    </div>\r\n                  ) : null\r\n                })}\r\n              </div>\r\n            </div>\r\n            <div className=\"output_content\">\r\n              <div className=\"output_meanings\">\r\n                {word.meanings.map((wordMeaning, i) => i === word.meanings.length - 1\r\n                  ? <OneMeaning key={i} meaning={wordMeaning} lastOne=\"true\" />\r\n                  : <OneMeaning key={i} meaning={wordMeaning} />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OutputFields;\r\n","import \"./NothingFound.css\";\r\n\r\nfunction NothingFound(props) {\r\n  return (\r\n    <div className=\"nothing-found\">\r\n      <h1 className=\"title\">Sorry, we couldn't find any definitions for \"<span className=\"title_word\">{props.word}</span>\" in <span className=\"title_lang\">{props.langLabel}</span></h1>\r\n      <h2 className=\"subtitle\">Try another word or even another language</h2>\r\n      <div className=\"puddle\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NothingFound;\r\n","import './LoadingScreen.css';\r\n\r\nfunction LoadingScreen() {\r\n    return(\r\n        <div className=\"gifContainer\"></div>\r\n    );\r\n}\r\n\r\nexport default LoadingScreen;","import InputFields from \"./InputFields\";\r\nimport OutputFields from \"./OutputFields\";\r\nimport NothingFound from \"./NothingFound\";\r\nimport LoadingScreen from \"./LoadingScreen\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction Content() {\r\n  const [lang, setLang] = useState(\"\");\r\n  const [langLabel, setLangLabel] = useState(\"\");\r\n  const [word, setWord] = useState(\"\");\r\n  const [notFoundWord, setNotFoundWord] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const [isResponseOK, setIsResponseOK] = useState(false);\r\n  const [hasSearched, setHasSearched] = useState(false);\r\n  const [clickedSearch, setClickedSearch] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [validInputs, setValidInputs] = useState({ validLang: false, validWord: false });\r\n  const [showInputHint, setShowInputHint] = useState({ langHint: false, wordHint: false });\r\n\r\n  useEffect(() => {\r\n    if (hasSearched) {\r\n      setShowInputHint({ langHint: !validInputs.validLang, wordHint: !validInputs.validWord })\r\n    }\r\n\r\n    if (validInputs.validLang && validInputs.validWord && clickedSearch) {\r\n      setIsLoading(true);\r\n\r\n      fetch(\r\n        `https://api.dictionaryapi.dev/api/v2/entries/${lang}/${word}`\r\n      ).then((response) => {\r\n        if (response.ok) {\r\n          setIsResponseOK(true);\r\n        }\r\n        else {\r\n          setIsResponseOK(false)\r\n        }\r\n        return response.json();\r\n      })\r\n        .then((data) => {\r\n          setData(data);\r\n          setIsLoading(false)\r\n          setNotFoundWord(word)\r\n        })\r\n        .catch((error) => console.error(\"error is:\", error));\r\n\r\n      setClickedSearch(false)\r\n    }\r\n  }, [clickedSearch, hasSearched, isResponseOK, lang, validInputs, word])\r\n\r\n  const handleSubmit = (e) => {\r\n    setValidInputs({ validLang: lang.length > 0 && langLabel.length > 0, validWord: word.length > 0 })\r\n\r\n    setHasSearched(true);\r\n    setClickedSearch(true)\r\n\r\n    // Prevent the site from refreshing when submitting\r\n    e.preventDefault();\r\n  };\r\n\r\n  // Set output element depending on the current state\r\n  let output\r\n  if (isResponseOK) {\r\n    output = <OutputFields data={data} word={word} lang={lang} langLabel={langLabel} notFoundWord={notFoundWord} />\r\n  }\r\n  else if (isLoading) {\r\n    output = <LoadingScreen />\r\n  }\r\n  else if (hasSearched && validInputs.validLang && validInputs.validWord) {\r\n    output = <NothingFound clickedSearch={clickedSearch} word={notFoundWord} langLabel={langLabel} />\r\n  }\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <InputFields handleSubmit={handleSubmit} onLangChanged={setLang} onWordChanged={setWord} onLangLabelChanged={setLangLabel} showInputHint={showInputHint} />\r\n\r\n      {output}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Content;\r\n","import './App.css';\nimport Header from './components/Header';\nimport Content from './components/Content';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Content />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}